- hosts: localhost
  become: false
  gather_facts: yes

  vars:
    brew_packages:
      - chezmoi
      - atuin
      - temurin
      - pyenv
      - php
      - btop
      - composer
      - android-commandlinetools
      - cocoapods
      - flutter
      - rustup
      - node
      - neovim
      - lazygit
      - fzf
      - atuin
      - yazi
      - docker-compose
      - lazydocker
      - mas
      - firebase-cli
      - koekeishiya/formulae/yabai
      - koekeishiya/formulae/skhd
    cask_packages:
      - dbeaver-community
      - karabiner-elements
      - obsidian
      - figma
      - docker
      - devcleaner
      - gimp
      - inkscape
      - alacritty
      - onlyoffice
      - font-0xproto-nerd-font
    ssh_key_path: "{{ ansible_env.HOME }}/Library/Mobile Documents/com~apple~CloudDocs/.ssh/id_ed25519"

  vars_prompt:
    - name: ssh_key_passphrase
      prompt: "Enter passphrase for your SSH key"
      private: yes

  tasks:
    - name: Ensure koekeishiya tap is added
      shell: brew tap koekeishiya/formulae
      args:
        creates: /opt/homebrew/Library/Taps/koekeishiya/homebrew-formulae

    - name: Install Homebrew packages
      homebrew:
        name: "{{ item }}"
        state: present
      loop: "{{ brew_packages }}"

    - name: Install Homebrew cask packages
      homebrew_cask:
        name: "{{ item }}"
        state: present
      loop: "{{ cask_packages }}"

    - name: Remove quarantine attribute from cask apps
      become: true
      shell: sudo xattr -d com.apple.quarantine /Applications/{{ item | title }}.app || true
      loop: "{{ cask_packages }}"
      ignore_errors: true

    - name: Start yabai service
      shell: yabai --start-service

    - name: Start skhd service
      shell: skhd --start-service

    - name: Install Oh My Zsh
      shell: |
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        creates: "{{ ansible_env.HOME }}/.oh-my-zsh"
      environment:
        RUNZSH: "no"
        CHSH: "no"

    - name: Install Xcode
      shell: mas install 497799835

    - name: Check that the SSH key file exists
      stat:
        path: "{{ ssh_key_path }}"
      register: ssh_key_exists

    - name: Create temporary askpass helper
      tempfile:
        state: file
        suffix: -askpass.sh
      register: askpass_script
      no_log: true
      when: ssh_key_exists.stat.exists

    - name: Write askpass script with provided passphrase
      copy:
        dest: "{{ askpass_script.path }}"
        mode: "0700"
        content: |
          #!/bin/sh
          echo "{{ ssh_key_passphrase }}"
      no_log: true
      when: ssh_key_exists.stat.exists

    - name: Add iCloud SSH key to ssh-agent (no keychain)
      shell: |
        set -e
        # Use existing agent if available, otherwise start a temporary one
        if [ -n "${SSH_AUTH_SOCK:-}" ] && ssh-add -l >/dev/null 2>&1; then
          started_agent=0
        else
          eval "$(ssh-agent -s)"
          started_agent=1
        fi

        # Force use of SSH_ASKPASS (non-interactive)
        SSH_ASKPASS="{{ askpass_script.path }}" \
        SSH_ASKPASS_REQUIRE=force \
        DISPLAY=:0 \
        ssh-add "{{ ssh_key_path }}"

        # If we started a temp agent, kill it after adding the key
        if [ "$started_agent" = "1" ]; then
          ssh-agent -k >/dev/null 2>&1 || true
        fi
      args:
        executable: /bin/bash
      no_log: true
      when: ssh_key_exists.stat.exists

    - name: Remove temporary askpass helper
      file:
        path: "{{ askpass_script.path }}"
        state: absent
      no_log: true
      when: ssh_key_exists.stat.exists
